diff --git a/Emuera/Emuera.csproj b/Emuera/Emuera.csproj
index aa2a524..2918ba2 100644
--- a/Emuera/Emuera.csproj
+++ b/Emuera/Emuera.csproj
@@ -9,13 +9,13 @@
     <OutputType>WinExe</OutputType>
     <AppDesignerFolder>Properties</AppDesignerFolder>
     <RootNamespace>MinorShift.Emuera</RootNamespace>
-    <AssemblyName>Emuera</AssemblyName>
+    <AssemblyName>ezEmuera</AssemblyName>
     <FileUpgradeFlags>
     </FileUpgradeFlags>
     <UpgradeBackupLocation>
     </UpgradeBackupLocation>
     <OldToolsVersion>3.5</OldToolsVersion>
-    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
+    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
     <IsWebBootstrapper>false</IsWebBootstrapper>
     <TargetFrameworkProfile>
     </TargetFrameworkProfile>
@@ -33,6 +33,7 @@
     <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
     <UseApplicationTrust>false</UseApplicationTrust>
     <BootstrapperEnabled>true</BootstrapperEnabled>
+    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
     <DebugSymbols>true</DebugSymbols>
@@ -43,6 +44,7 @@
     <ErrorReport>prompt</ErrorReport>
     <WarningLevel>4</WarningLevel>
     <Prefer32Bit>false</Prefer32Bit>
+    <PlatformTarget>x86</PlatformTarget>
   </PropertyGroup>
   <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
     <DebugType>none</DebugType>
@@ -52,6 +54,7 @@
     <ErrorReport>prompt</ErrorReport>
     <WarningLevel>4</WarningLevel>
     <Prefer32Bit>false</Prefer32Bit>
+    <PlatformTarget>x86</PlatformTarget>
   </PropertyGroup>
   <ItemGroup>
     <Reference Include="Microsoft.VisualBasic" />
@@ -74,6 +77,7 @@
     <Compile Include="Content\AppContents.cs" />
     <Compile Include="Content\CroppedImage.cs" />
     <Compile Include="Content\GraphicsImage.cs" />
+    <Compile Include="EzTranslate.cs" />
     <Compile Include="Forms\ClipBoardDialog.cs">
       <SubType>Form</SubType>
     </Compile>
@@ -269,7 +273,14 @@
       <Install>false</Install>
     </BootstrapperPackage>
   </ItemGroup>
-  <ItemGroup />
+  <ItemGroup>
+    <Content Include="EmueraLicense.txt">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </Content>
+    <Content Include="ezemuera_trans.dll">
+      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
+    </Content>
+  </ItemGroup>
   <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
   <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
        Other similar extension points exist, see Microsoft.Common.targets.
diff --git a/Emuera/GameProc/Function/BuiltInFunctionCode.cs b/Emuera/GameProc/Function/BuiltInFunctionCode.cs
index c67c506..71e8528 100644
--- a/Emuera/GameProc/Function/BuiltInFunctionCode.cs
+++ b/Emuera/GameProc/Function/BuiltInFunctionCode.cs
@@ -355,5 +355,7 @@ namespace MinorShift.Emuera.GameProc.Function
 		PRINT_SPACE,
 
 		INPUTMOUSEKEY,
+
+		EZ,
 	}
 }
diff --git a/Emuera/GameProc/Function/FunctionIdentifier.cs b/Emuera/GameProc/Function/FunctionIdentifier.cs
index 1dd90c6..b30eb12 100644
--- a/Emuera/GameProc/Function/FunctionIdentifier.cs
+++ b/Emuera/GameProc/Function/FunctionIdentifier.cs
@@ -388,6 +388,8 @@ namespace MinorShift.Emuera.GameProc.Function
 			addFunction(FunctionCode.ENCODETOUNI, argb[FunctionArgType.FORM_STR_NULLABLE], METHOD_SAFE | EXTENDED);//式中関数版を追加。処理が全然違う
 			#endregion
 
+			addFunction(FunctionCode.EZ, new EZ_Instruction());
+
 			Dictionary<string, FunctionMethod> methodList = FunctionMethodCreator.GetMethodList();
 			foreach (KeyValuePair<string, FunctionMethod> pair in methodList)
 			{
diff --git a/Emuera/GameProc/Function/Instraction.Child.cs b/Emuera/GameProc/Function/Instraction.Child.cs
index 35bde06..ce0d44c 100644
--- a/Emuera/GameProc/Function/Instraction.Child.cs
+++ b/Emuera/GameProc/Function/Instraction.Child.cs
@@ -9,6 +9,7 @@ using MinorShift._Library;
 using MinorShift.Emuera.GameData.Function;
 using System.Drawing;
 using System.IO;
+using Riey;
 
 namespace MinorShift.Emuera.GameProc.Function
 {
@@ -2438,5 +2439,46 @@ namespace MinorShift.Emuera.GameProc.Function
 			}
 		}
 		#endregion
+
+	    #region ezFunction
+
+	    private sealed class EZ_Instruction : AbstractInstruction
+	    {
+	        public EZ_Instruction()
+	        {
+	            ArgBuilder = ArgumentParser.GetArgumentBuilder(FunctionArgType.SP_CALL);
+
+	            flag = METHOD_SAFE;
+	        }
+
+	        public override void DoInstruction(ExpressionMediator exm, InstructionLine func, ProcessState state)
+	        {
+	            if (!EzTranslate.IsInitialized) return;
+
+	            if(!(func.Argument is SpCallArgment arg))
+                    throw new CodeEE("EZ error", func.Position);
+
+	            switch (arg.FuncnameTerm.GetStrValue(exm).ToUpper())
+	            {
+                    case "ADDDIC_AFTER":
+                        EzTranslate.AddAfterDict(arg.RowArgs[0].GetStrValue(exm), arg.RowArgs[1].GetStrValue(exm));
+                        break;
+                    case "ADDDIC":
+	                case "ADDDIC_BEFORE":
+                        EzTranslate.AddBeforeDict(arg.RowArgs[0].GetStrValue(exm), arg.RowArgs[1].GetStrValue(exm));
+	                    break;
+                    case "TRANS_OFF":
+                        GlobalStatic.EzTransState = false;
+                        exm.Console.RefreshStrings(true);
+                        break;
+                    case "TRANS_ON":
+                        GlobalStatic.EzTransState = true;
+                        exm.Console.RefreshStrings(true);
+                        break;
+                }
+	        }
+	    }
+
+	    #endregion
 	}
 }
\ No newline at end of file
diff --git a/Emuera/GameView/AConsoleDisplayPart.cs b/Emuera/GameView/AConsoleDisplayPart.cs
index fc22728..c8afdef 100644
--- a/Emuera/GameView/AConsoleDisplayPart.cs
+++ b/Emuera/GameView/AConsoleDisplayPart.cs
@@ -12,7 +12,18 @@ namespace MinorShift.Emuera.GameView
 	{
 		public bool Error { get; protected set; }
 
-		public string Str { get; protected set; }
+	    private string _originalStr, _translatedStr;
+
+	    public string Str
+	    {
+	        get => GlobalStatic.EzTransState ? _translatedStr : _originalStr;
+	        protected set
+	        {
+	            _originalStr = value;
+	            _translatedStr = Riey.EzTranslate.Translate(_originalStr);
+	        }
+	    }
+
 		public string AltText { get; protected set; }
 		public int PointX { get; set; }
 		public float XsubPixel { get; set; }
diff --git a/Emuera/GlobalStatic.cs b/Emuera/GlobalStatic.cs
index a6fac4e..c8c29dd 100644
--- a/Emuera/GlobalStatic.cs
+++ b/Emuera/GlobalStatic.cs
@@ -35,6 +35,8 @@ namespace MinorShift.Emuera
 		//
 		public static LabelDictionary LabelDictionary;
 
+	    public static bool EzTransState = false;
+
 
 		//ERBloaderに引数解析の結果を渡すための橋渡し変数
 		//1756 Processから移動。Program.AnalysisMode用
diff --git a/Emuera/Program.cs b/Emuera/Program.cs
index 74b831b..2e88013 100644
--- a/Emuera/Program.cs
+++ b/Emuera/Program.cs
@@ -6,6 +6,8 @@ using MinorShift._Library;
 using MinorShift.Emuera.GameView;
 using MinorShift.Emuera.GameData.Expression;
 using System.IO;
+using System.Text;
+using Riey;
 
 namespace MinorShift.Emuera
 {
@@ -136,6 +138,9 @@ namespace MinorShift.Emuera
 					}
 				}
 			}
+
+			InitEzEmuera();
+
 			MainWindow win = null;
 			while (true)
 			{
@@ -167,8 +172,53 @@ namespace MinorShift.Emuera
 				Reboot = false;
 				ConfigData.Instance.ReLoadConfig();
 			}
+
+            ExitEzEmuera();
 		}
 
+
+	    private static void InitEzEmuera()
+	    {
+	        var ezPathFile = Path.Combine(ExeDir, "ez_path.txt");
+			var ezPath = "";
+
+	        if (File.Exists(ezPathFile))
+	        {
+				ezPath = File.ReadAllText(ezPathFile);
+	        }
+			else
+			{
+	            using (var dialog = new FolderBrowserDialog())
+	            {
+	                dialog.Description = "이지트랜스 경로를 설정해주세요";
+
+	                if (dialog.ShowDialog() != DialogResult.OK)
+	                    return;
+
+	                ezPath = dialog.SelectedPath;
+	            }
+
+				File.WriteAllText(ezPathFile, ezPath);
+			}
+
+	        bool result = EzTranslate.Init(ezPath, ".");
+
+	        if (!result)
+	        {
+	            MessageBox.Show("ezTrans 초기화에 실패했습니다");
+	        }
+
+			EzTranslate.Save(".");
+
+            GlobalStatic.EzTransState = EzTranslate.IsInitialized;
+	    }
+
+	    private static void ExitEzEmuera()
+	    {
+			EzTranslate.Save(".");
+			EzTranslate.Delete();
+	    }
+
 		/// <summary>
 		/// 実行ファイルのディレクトリ。最後に\を付けたstring
 		/// </summary>
diff --git a/license.txt b/license.txt
deleted file mode 100644
index e01742a..0000000
--- a/license.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-﻿Copyright (C) 2008- MinorShift, 妊）|дﾟ)の中の人
-
-本ソフトウェアは「現状のまま」で、明示であるか暗黙であるかを問わず、何らの保証もなく提供されます。 本ソフトウェアの使用によって生じるいかなる損害についても、作者は一切の責任を負わないものとします。 
-
-以下の制限に従う限り、商用アプリケーションを含めて、本ソフトウェアを任意の目的に使用し、自由に改変して再頒布することをすべての人に許可します。 
-
-1.本ソフトウェアの出自について虚偽の表示をしてはなりません。あなたがオリジナルのソフトウェアを作成したと主張してはなりません。 あなたが本ソフトウェアを製品内で使用する場合、製品の文書に謝辞を入れていただければ幸いですが、必須ではありません。 
-2.ソースを変更した場合は、そのことを明示しなければなりません。オリジナルのソフトウェアであるという虚偽の表示をしてはなりません。 
-3.ソースの頒布物から、この表示を削除したり、表示の内容を変更したりしてはなりません。
